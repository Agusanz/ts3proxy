{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"getRadi",
				"getRadioListCategories"
			],
			[
				"lod",
				"load_config"
			]
		]
	},
	"buffers":
	[
		{
			"file": "ts3proxy.py",
			"settings":
			{
				"buffer_size": 1136,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "import sys\nimport socket\nimport threading\nimport status\n\n_kill = False\n_relayport = 0\n_remoteaddress = \"\"\n_remoteport = 0\n\ndef relay():\n\tsock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n\tsock.bind((\"127.0.0.1\", _relayport))\n\n\tincomingsetup = False\n\tclientport = 0\n\tclientip = \"\"\n\n\twhile True:\n\t\tdata, fromaddr = sock.recvfrom(1024)\n\n\t\tif (_kill == True):\n\t\t\tsock.close()\n\t\t\treturn\n\n\t\tif (incomingsetup == False):\n\t\t\tclientport = fromaddr[1]\n\t\t\tclientip = fromaddr[0]\n\t\t\tincomingsetup = True\n\n\t\tif (fromaddr[0] == clientip):\n\t\t\t#forward from client to server\n\t\t\tsock.sendto(data, (_remoteaddress, _remoteport))\n\t\t\tstatus.bytestoremote += sys.getsizeof(data)\n\t\telse:\n\t\t\t#forward from server to client\n\t\t\tsock.sendto(data, (clientip, clientport))\n\t\t\tstatus.bytesfromremote += sys.getsizeof(data)\n\ndef start(relayport, remoteaddress, remoteport):\n\tglobal _relayport\n\tglobal _remoteaddress\n\tglobal _remoteport\n\n\t_relayport = relayport\n\t_remoteaddress = remoteaddress\n\t_remoteport = remoteport\n\n\trelaythread = threading.Thread(target = relay)\n\trelaythread.start()\n\ndef stop():\n\t_kill = True\n\t#send anything to the input port to trigger it to read, therefore allowing the thread to close\n\tquitsock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n\tquitsock.sendto(\"killing\", (\"127.0.0.1\", _relayport))\n\tquitsock.close()",
			"file": "/Users/kalle/Downloads/boxy-master/relay/udp.py",
			"file_size": 1319,
			"file_write_time": 130614601400000000,
			"settings":
			{
				"buffer_size": 1321,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/kalle/Nextcloud/dev/javascript/the_incredible_radio_extension/popup.js",
		"/Users/kalle/Nextcloud/dev/javascript/the_incredible_radio_extension/popup.html",
		"/Users/kalle/Nextcloud/dev/javascript/the_incredible_radio_extension/tire.js",
		"/Users/kalle/Nextcloud/dev/javascript/the_incredible_radio_extension/manifest.json",
		"/Users/kalle/Nextcloud/dev/javascript/the_incredible_radio_extension/background.js",
		"/Users/kalle/Library/Containers/com.apple.mail/Data/Library/Mail Downloads/A1A1684C-B8CE-4088-BE56-7D43C430B892/radios_v2.js",
		"/Users/kalle/Documents/chatbot/chatbot.py",
		"/Users/kalle/Documents/gamemaster/config/gsms.yml",
		"/Users/kalle/Documents/gamemaster/core/debug.py",
		"/Users/kalle/Documents/gamemaster/core/tcpsocket.py",
		"/Users/kalle/Documents/gamemaster/plugins/gsms.py",
		"/Users/kalle/Documents/gamemaster/gamemaster.py"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/Users/kalle/Nextcloud/dev/javascript/the_incredible_radio_extension"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"els",
			"const els",
			"/usr/",
			"creating ",
			"-- Installing: ",
			"favorite",
			"addFavoriteToList",
			"DisplayGenreList",
			"getradiolistgenres",
			"return",
			"nothing here",
			"player_category",
			"player_categor",
			"player_search",
			"setitem",
			"nostream",
			"playradio",
			"None",
			"error"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"rm -rf /usr/",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "ts3proxy.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1136,
						"regions":
						{
						},
						"selection":
						[
							[
								992,
								992
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 47.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/Users/kalle/Downloads/boxy-master/relay/udp.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1321,
						"regions":
						{
						},
						"selection":
						[
							[
								215,
								215
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "ts3proxy.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 251.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
